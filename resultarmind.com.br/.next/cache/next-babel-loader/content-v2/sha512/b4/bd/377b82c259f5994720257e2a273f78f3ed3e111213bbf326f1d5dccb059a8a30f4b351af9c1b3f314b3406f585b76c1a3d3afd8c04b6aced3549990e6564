{"ast":null,"code":"var _jsxFileName = \"D:\\\\Resultarmind\\\\linktree\\\\rmcsm\\\\resultarmind.com.br\\\\components\\\\Forms\\\\Register.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { withTranslation } from \"../../i18n\";\nimport routeLink from \"../../public/text/link\";\nimport { useText } from \"../../theme/common\";\nimport Checkbox from './Checkbox';\nimport SocialAuth from './SocialAuth';\nimport Title from '../Title/TitleSecondary';\nimport AuthFrame from './AuthFrame';\nimport useStyles from './form-style';\n\nfunction Register(props) {\n  const classes = useStyles();\n  const text = useText();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const {\n    t\n  } = props;\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  useEffect(() => {\n    ValidatorForm.addValidationRule('isPasswordMatch', value => {\n      if (value !== values.password) {\n        return false;\n      }\n\n      return true;\n    });\n    ValidatorForm.addValidationRule('isTruthy', value => value);\n  });\n  const {\n    0: check,\n    1: setCheck\n  } = useState(false);\n\n  const handleChange = name => event => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: event.target.value\n    }));\n  };\n\n  const handleCheck = event => {\n    setCheck(event.target.checked);\n  };\n\n  const handleSubmit = () => {\n    console.log('data submited');\n  };\n\n  return __jsx(AuthFrame, {\n    title: t('common:register_title'),\n    subtitle: t('common:register_subtitle'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(Title, {\n    align: isMobile ? 'center' : 'left',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, t('common:register')), __jsx(Button, {\n    size: \"small\",\n    className: classes.buttonLink,\n    href: routeLink.saas.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    className: clsx(classes.icon, classes.signArrow),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"arrow_forward\"), t('common:register_already'))), __jsx(SocialAuth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: classes.separator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, t('common:register_or'))), __jsx(ValidatorForm, {\n    onError: errors => console.log(errors),\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    className: classes.input,\n    label: t('common:register_name'),\n    onChange: handleChange('name'),\n    name: \"name\",\n    value: values.name,\n    validators: ['required'],\n    errorMessages: ['This field is required'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    className: classes.input,\n    label: t('common:register_email'),\n    onChange: handleChange('email'),\n    name: \"email\",\n    value: values.email,\n    validators: ['required', 'isEmail'],\n    errorMessages: ['This field is required', 'Email is not valid'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    type: \"password\",\n    className: classes.input,\n    label: t('common:register_password'),\n    validators: ['required'],\n    onChange: handleChange('password'),\n    errorMessages: ['This field is required'],\n    name: \"password\",\n    value: values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, __jsx(TextValidator, {\n    variant: \"filled\",\n    type: \"password\",\n    className: classes.input,\n    label: t('common:register_confirm'),\n    validators: ['isPasswordMatch', 'required'],\n    errorMessages: ['Password mismatch', 'This field is required'],\n    onChange: handleChange('confirmPassword'),\n    name: \"confirm\",\n    value: values.confirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    className: classes.btnArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      validators: ['isTruthy'],\n      errorMessages: \"This field is required\",\n      checked: check,\n      value: check,\n      onChange: e => handleCheck(e),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }),\n    label: __jsx(\"span\", {\n      className: text.caption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, t('common:form_terms'), \"\\xA0\", __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, t('common:form_privacy'))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"secondary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, t('common:continue'))))));\n}\n\nRegister.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation(['common'])(Register);","map":{"version":3,"sources":["D:/Resultarmind/linktree/rmcsm/resultarmind.com.br/components/Forms/Register.js"],"names":["React","useState","useEffect","PropTypes","Button","Icon","clsx","Typography","useMediaQuery","useTheme","FormControlLabel","Grid","ValidatorForm","TextValidator","withTranslation","routeLink","useText","Checkbox","SocialAuth","Title","AuthFrame","useStyles","Register","props","classes","text","theme","isMobile","breakpoints","down","t","values","setValues","name","email","password","confirmPassword","addValidationRule","value","check","setCheck","handleChange","event","target","handleCheck","checked","handleSubmit","console","log","head","buttonLink","saas","login","icon","signArrow","separator","errors","input","btnArea","e","caption","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { withTranslation } from '~/i18n';\nimport routeLink from '~/public/text/link';\nimport { useText } from '~/theme/common';\nimport Checkbox from './Checkbox';\nimport SocialAuth from './SocialAuth';\nimport Title from '../Title/TitleSecondary';\nimport AuthFrame from './AuthFrame';\nimport useStyles from './form-style';\n\nfunction Register(props) {\n  const classes = useStyles();\n  const text = useText();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const { t } = props;\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n\n  useEffect(() => {\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n      if (value !== values.password) {\n        return false;\n      }\n      return true;\n    });\n    ValidatorForm.addValidationRule('isTruthy', value => value);\n  });\n\n  const [check, setCheck] = useState(false);\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleCheck = event => {\n    setCheck(event.target.checked);\n  };\n\n  const handleSubmit = () => {\n    console.log('data submited');\n  };\n\n  return (\n    <AuthFrame title={t('common:register_title')} subtitle={t('common:register_subtitle')}>\n      <div>\n        <div className={classes.head}>\n          <Title align={isMobile ? 'center' : 'left'}>{t('common:register')}</Title>\n          <Button size=\"small\" className={classes.buttonLink} href={routeLink.saas.login}>\n            <Icon className={clsx(classes.icon, classes.signArrow)}>arrow_forward</Icon>\n            {t('common:register_already')}\n          </Button>\n        </div>\n        <SocialAuth />\n        <div className={classes.separator}>\n          <Typography>{t('common:register_or')}</Typography>\n        </div>\n        <ValidatorForm\n          onError={errors => console.log(errors)}\n          onSubmit={handleSubmit}\n        >\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextValidator\n                variant=\"filled\"\n                className={classes.input}\n                label={t('common:register_name')}\n                onChange={handleChange('name')}\n                name=\"name\"\n                value={values.name}\n                validators={['required']}\n                errorMessages={['This field is required']}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextValidator\n                variant=\"filled\"\n                className={classes.input}\n                label={t('common:register_email')}\n                onChange={handleChange('email')}\n                name=\"email\"\n                value={values.email}\n                validators={['required', 'isEmail']}\n                errorMessages={['This field is required', 'Email is not valid']}\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextValidator\n                variant=\"filled\"\n                type=\"password\"\n                className={classes.input}\n                label={t('common:register_password')}\n                validators={['required']}\n                onChange={handleChange('password')}\n                errorMessages={['This field is required']}\n                name=\"password\"\n                value={values.password}\n              />\n            </Grid>\n            <Grid item md={6} xs={12}>\n              <TextValidator\n                variant=\"filled\"\n                type=\"password\"\n                className={classes.input}\n                label={t('common:register_confirm')}\n                validators={['isPasswordMatch', 'required']}\n                errorMessages={['Password mismatch', 'This field is required']}\n                onChange={handleChange('confirmPassword')}\n                name=\"confirm\"\n                value={values.confirmPassword}\n              />\n            </Grid>\n          </Grid>\n          <div className={classes.btnArea}>\n            <FormControlLabel\n              control={(\n                <Checkbox\n                  validators={['isTruthy']}\n                  errorMessages=\"This field is required\"\n                  checked={check}\n                  value={check}\n                  onChange={(e) => handleCheck(e)}\n                  color=\"primary\"\n                />\n              )}\n              label={(\n                <span className={text.caption}>\n                  {t('common:form_terms')}\n                  &nbsp;\n                  <a href=\"#\">\n                    {t('common:form_privacy')}\n                  </a>\n                </span>\n              )}\n            />\n            <Button variant=\"contained\" type=\"submit\" color=\"secondary\" size=\"large\">\n              {t('common:continue')}\n            </Button>\n          </div>\n        </ValidatorForm>\n      </div>\n    </AuthFrame>\n  );\n}\n\n\nRegister.propTypes = {\n  t: PropTypes.func.isRequired\n};\n\nexport default withTranslation(['common'])(Register);\n"]},"metadata":{},"sourceType":"module"}