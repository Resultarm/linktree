{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\nimport Scrollspy from \"react-scrollspy\";\nimport Fab from \"@material-ui/core/Fab\";\nimport ArrowIcon from \"@material-ui/icons/ArrowUpward\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { withTranslation } from \"../../i18n\";\nimport useStyles from \"./pagenav-style\";\nimport api from \"../../services/api\";\n\nfunction createData(id, name, url) {\n  return {\n    id,\n    name,\n    url\n  };\n}\n\nconst LinkBtn = /*#__PURE__*/React.forwardRef(function LinkBtn(props, ref) {\n  // eslint-disable-line\n  return __jsx(AnchorLink, _extends({\n    to: props.to\n  }, props)); // eslint-disable-line\n});\n\nfunction PageNav(props) {\n  const {\n    t\n  } = props;\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  let flagShow = false;\n  const {\n    0: user,\n    1: setUser\n  } = useState(\"\");\n  useEffect(() => {\n    setUser(window.location.host.split(\".\")[0].split(\":\")[0]);\n  }, []);\n\n  const handleScroll = () => {\n    const doc = document.documentElement;\n    const scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    const newFlagShow = scroll > 500;\n\n    if (flagShow !== newFlagShow) {\n      setShow(newFlagShow);\n      flagShow = newFlagShow;\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    console.log();\n  }, []);\n  const classes = useStyles();\n  useEffect(() => {\n    api.get(\"read-menu/\" + user).then(r => {\n      setMenuList(r.data.links.map(i => createData(i.name, i.url)));\n      setNavMenu(r.data.links);\n    }).catch(e => {\n      var _e$response;\n\n      console.log(e);\n\n      if (((_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status) === 404) {}\n    });\n  }, [user]);\n  const {\n    0: menuList,\n    1: setMenuList\n  } = useState([]);\n  const {\n    0: navMenu,\n    1: setNavMenu\n  } = useState([]);\n  return __jsx(\"div\", {\n    className: clsx(classes.pageNav, show && classes.show)\n  }, __jsx(\"nav\", {\n    className: classes.sectionNav\n  }, __jsx(Scrollspy, {\n    items: navMenu,\n    currentClassName: \"active\"\n  }, menuList.map((item, index) => __jsx(\"li\", {\n    key: index.toString(),\n    style: {\n      top: 30 * (navMenu.length - index)\n    },\n    \"data-id\": index\n  }, __jsx(Tooltip, {\n    title: t(\"\" + item.name),\n    placement: \"left\",\n    classes: {\n      tooltip: classes.tooltip\n    }\n  }, __jsx(AnchorLink, {\n    href: item.url\n  })))))), __jsx(Tooltip, {\n    title: \"To Top\",\n    placement: \"left\",\n    classes: {\n      tooltip: classes.tooltip\n    }\n  }, __jsx(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"To top\",\n    component: LinkBtn,\n    href: \"#home\",\n    className: classes.fab\n  }, __jsx(ArrowIcon, null))));\n}\n\nexport default withTranslation([\"saas-landing\"])(PageNav);","map":null,"metadata":{},"sourceType":"module"}