{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { withTranslation } from \"../../i18n\";\nimport routeLink from \"../../public/text/link\";\nimport useStyles from \"./header-style\";\nimport api from \"../../services/api\";\n\nfunction MobileMenu(props) {\n  const classes = useStyles();\n  const {\n    toggleDrawer,\n    open,\n    t\n  } = props;\n  const {\n    0: navMenu,\n    1: setNavMenu\n  } = useState([]);\n  const {\n    0: user,\n    1: setUser\n  } = useState(\"\");\n  useEffect(() => {\n    setUser(window.location.host.split(\".\")[0].split(\":\")[0]);\n  }, []);\n  useEffect(() => {\n    api.get(\"read-menu/\" + user).then(r => {\n      setNavMenu(r.data.links);\n    }).catch(e => {\n      var _e$response;\n\n      if (((_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status) === 404) {}\n    });\n  }, [user]);\n\n  const SideList = () => __jsx(\"div\", {\n    className: classes.mobileNav,\n    role: \"presentation\",\n    onClick: toggleDrawer,\n    onKeyDown: toggleDrawer\n  }, __jsx(\"div\", {\n    className: clsx(classes.menu, open && classes.menuOpen)\n  }, __jsx(List, {\n    component: \"nav\"\n  }, navMenu.map((item, index) => __jsx(ListItem, {\n    button: true,\n    component: \"a\",\n    href: `${item.url}`,\n    key: index.toString(),\n    style: {\n      animationDuration: index * 0.15 + \"s\"\n    }\n  }, __jsx(ListItemText, {\n    primary: t(\"\" + item.name),\n    className: classes.menuList\n  }))), __jsx(Divider, {\n    className: classes.dividerSidebar\n  }), [\"login\", \"register\"].map((item, index) => __jsx(ListItem, {\n    button: true,\n    component: \"a\",\n    href: routeLink.saas[item],\n    key: index.toString(),\n    style: {\n      animationDuration: navMenu.length * 0.15 + \"s\"\n    }\n  }, __jsx(ListItemText, {\n    primary: t(\"\" + item),\n    className: classes.menuList\n  }))))));\n\n  return __jsx(SwipeableDrawer, {\n    open: open,\n    onClose: toggleDrawer,\n    onOpen: toggleDrawer,\n    classes: {\n      paper: classes.paperNav\n    }\n  }, __jsx(SideList, null));\n}\n\nexport default withTranslation([\"saas-landing\"])(MobileMenu);","map":null,"metadata":{},"sourceType":"module"}