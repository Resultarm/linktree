{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"next/link\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\nimport Scrollspy from \"react-scrollspy\";\nimport Settings from \"./Settings\";\nimport MobileMenu from \"./MobileMenu\";\nimport logo from \"../../public/images/saas-logo.svg\";\nimport brand from \"../../public/text/brand\";\nimport link from \"../../public/text/link\";\nimport { withTranslation } from \"../../i18n\";\nimport useStyles from \"./header-style\";\nimport api from \"../../services/api\";\nlet counter = 0;\n\nfunction createData(name, url, offset) {\n  counter += 1;\n  return {\n    id: counter,\n    name,\n    url,\n    offset\n  };\n}\n\nconst LinkBtn = /*#__PURE__*/React.forwardRef(function LinkBtn(props, ref) {\n  // eslint-disable-line\n  return __jsx(AnchorLink, _extends({\n    to: props.to\n  }, props, {\n    innerRef: ref\n  })); // eslint-disable-line\n});\n\nfunction Header(props) {\n  const {\n    0: fixed,\n    1: setFixed\n  } = useState(false);\n  let flagFixed = false;\n\n  const handleScroll = () => {\n    const doc = document.documentElement;\n    const scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    const newFlagFixed = scroll > 100;\n\n    if (flagFixed !== newFlagFixed) {\n      setFixed(newFlagFixed);\n      flagFixed = newFlagFixed;\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    console.log();\n  }, []);\n  const classes = useStyles();\n  const theme = useTheme();\n  const {\n    onToggleDark,\n    onToggleDir,\n    invert,\n    t\n  } = props;\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const {\n    0: imageP,\n    1: setImageP\n  } = useState(\"\");\n  const {\n    0: user,\n    1: setUser\n  } = useState(\"\");\n  useEffect(() => {\n    setUser(window.location.host.split(\".\")[0].split(\":\")[0]);\n  }, []);\n  useEffect(() => {\n    api.get(\"read-logo/\" + user).then(r => {\n      setImageP(r.data.file_path);\n    }).catch(e => {\n      var _e$response;\n\n      if (((_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status) === 404) {}\n    });\n  }, [user]);\n  useEffect(() => {\n    api.get(\"read-menu/\" + user).then(r => {\n      setMenuList(r.data.links.map(i => createData(i.name, i.url)));\n      setNavMenu(r.data.links);\n    }).catch(e => {\n      var _e$response2;\n\n      console.log(e);\n\n      if (((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.status) === 404) {}\n    });\n  }, [user]);\n  const {\n    0: menuList,\n    1: setMenuList\n  } = useState([]);\n  const {\n    0: navMenu,\n    1: setNavMenu\n  } = useState([]);\n  const {\n    0: openDrawer,\n    1: setOpenDrawer\n  } = useState(false);\n\n  const handleOpenDrawer = () => {\n    setOpenDrawer(!openDrawer);\n  };\n\n  return __jsx(Fragment, null, isMobile && __jsx(MobileMenu, {\n    open: openDrawer,\n    toggleDrawer: handleOpenDrawer\n  }), __jsx(AppBar, {\n    component: \"header\",\n    position: \"relative\",\n    id: \"header\",\n    className: clsx(classes.header, fixed && classes.fixed, invert && classes.invert, openDrawer && classes.openDrawer)\n  }, __jsx(Container, {\n    fixed: isDesktop\n  }, __jsx(\"div\", {\n    className: classes.headerContent\n  }, __jsx(\"nav\", {\n    className: classes.navMenu\n  }, isMobile && __jsx(IconButton, {\n    onClick: handleOpenDrawer,\n    className: clsx(\"hamburger hamburger--spin\", classes.mobileMenu, openDrawer && \"is-active\")\n  }, __jsx(\"span\", {\n    className: \"hamburger-box\"\n  }, __jsx(\"span\", {\n    className: clsx(classes.bar, \"hamburger-inner\")\n  }))), __jsx(\"div\", {\n    className: classes.logo\n  }, invert ? __jsx(Link, {\n    href: link.saas.home\n  }, __jsx(\"a\", null, __jsx(\"img\", {\n    src: `${api.defaults.baseURL}${imageP.substring(1)}`,\n    alt: \"logo\"\n  }), !isMobile && brand.saas.name)) : __jsx(AnchorLink, {\n    href: \"#home\"\n  }, __jsx(\"img\", {\n    src: `${api.defaults.baseURL}${imageP.substring(1)}`,\n    alt: \"logo\"\n  }), !isMobile && brand.saas.name)), isDesktop && __jsx(Scrollspy, {\n    items: navMenu,\n    currentClassName: \"active\"\n  }, menuList === null || menuList === void 0 ? void 0 : menuList.map(item => __jsx(\"li\", {\n    key: item.id.toString()\n  }, invert ? // eslint-disable-next-line\n  __jsx(Button, {\n    offset: item.offset || 0,\n    href: item.url\n  }, t(\"\" + item.name)) : __jsx(Button, {\n    component: AnchorLink,\n    offset: item.offset || 0,\n    href: item.url\n  }, t(\"\" + item.name)))))), __jsx(\"nav\", {\n    className: classes.navMenu\n  }, __jsx(Hidden, {\n    xsDown: true\n  }, __jsx(Button, {\n    href: link.saas.login,\n    className: classes.textBtn\n  }, t(\"common:saas-landing.header_login\")), __jsx(Button, {\n    href: link.saas.register,\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.button\n  }, t(\"common:saas-landing.header_register\"))), __jsx(Settings, {\n    toggleDark: onToggleDark,\n    toggleDir: onToggleDir,\n    invert: invert\n  }))))));\n}\n\nHeader.defaultProps = {\n  sticky: false,\n  invert: false\n};\nexport default withTranslation([\"saas-landing\"])(Header);","map":null,"metadata":{},"sourceType":"module"}