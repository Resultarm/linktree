{"ast":null,"code":"import _extends from \"/Users/franciscosantos/go/src/Works/rmcsm/resultarmind.com.br/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\nimport Scrollspy from \"react-scrollspy\";\nimport Fab from \"@material-ui/core/Fab\";\nimport ArrowIcon from \"@material-ui/icons/ArrowUpward\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { withTranslation } from \"../../i18n\";\nimport useStyles from \"./pagenav-style\";\nimport api from \"../../services/api\";\n\nfunction createData(id, name, url) {\n  return {\n    id: id,\n    name: name,\n    url: url\n  };\n}\n\nvar LinkBtn = /*#__PURE__*/React.forwardRef(function LinkBtn(props, ref) {\n  // eslint-disable-line\n  return __jsx(AnchorLink, _extends({\n    to: props.to\n  }, props)); // eslint-disable-line\n});\n\nfunction PageNav(props) {\n  var t = props.t;\n\n  var _useState = useState(false),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  var flagShow = false;\n\n  var _useState2 = useState(\"\"),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  useEffect(function () {\n    setUser(window.location.host.split(\".\")[0].split(\":\")[0]);\n  }, []);\n\n  var handleScroll = function handleScroll() {\n    var doc = document.documentElement;\n    var scroll = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    var newFlagShow = scroll > 500;\n\n    if (flagShow !== newFlagShow) {\n      setShow(newFlagShow);\n      flagShow = newFlagShow;\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"scroll\", handleScroll);\n    console.log();\n  }, []);\n  var classes = useStyles();\n  useEffect(function () {\n    api.get(\"read-menu/\" + user).then(function (r) {\n      setMenuList(r.data.links.map(function (i) {\n        return createData(i.name, i.url);\n      }));\n      setNavMenu(r.data.links);\n    })[\"catch\"](function (e) {\n      var _e$response;\n\n      console.log(e);\n\n      if (((_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status) === 404) {}\n    });\n  }, [user]);\n\n  var _useState3 = useState([]),\n      menuList = _useState3[0],\n      setMenuList = _useState3[1];\n\n  var _useState4 = useState([]),\n      navMenu = _useState4[0],\n      setNavMenu = _useState4[1];\n\n  return __jsx(\"div\", {\n    className: clsx(classes.pageNav, show && classes.show)\n  }, __jsx(\"nav\", {\n    className: classes.sectionNav\n  }, __jsx(Scrollspy, {\n    items: navMenu,\n    currentClassName: \"active\"\n  }, menuList.map(function (item, index) {\n    return __jsx(\"li\", {\n      key: index.toString(),\n      style: {\n        top: 30 * (navMenu.length - index)\n      },\n      \"data-id\": index\n    }, __jsx(Tooltip, {\n      title: t(\"\" + item.name),\n      placement: \"left\",\n      classes: {\n        tooltip: classes.tooltip\n      }\n    }, __jsx(AnchorLink, {\n      href: item.url\n    })));\n  }))), __jsx(Tooltip, {\n    title: \"To Top\",\n    placement: \"left\",\n    classes: {\n      tooltip: classes.tooltip\n    }\n  }, __jsx(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"To top\",\n    component: LinkBtn,\n    href: \"#home\",\n    className: classes.fab\n  }, __jsx(ArrowIcon, null))));\n}\n\nexport default withTranslation([\"saas-landing\"])(PageNav);","map":null,"metadata":{},"sourceType":"module"}