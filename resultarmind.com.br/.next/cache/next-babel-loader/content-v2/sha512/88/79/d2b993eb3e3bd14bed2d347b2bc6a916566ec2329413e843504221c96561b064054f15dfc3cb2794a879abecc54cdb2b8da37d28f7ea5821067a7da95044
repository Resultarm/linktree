{"ast":null,"code":"var _jsxFileName = \"/Users/franciscosantos/go/src/Works/rmcsm/resultarmind.com.br/components/Header/MobileMenu.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { withTranslation } from \"../../i18n\";\nimport routeLink from \"../../public/text/link\";\nimport useStyles from \"./header-style\";\nimport api from \"../../services/api\";\n\nfunction MobileMenu(props) {\n  const classes = useStyles();\n  const {\n    toggleDrawer,\n    open,\n    t\n  } = props;\n  const {\n    0: navMenu,\n    1: setNavMenu\n  } = useState([]);\n  const {\n    0: user,\n    1: setUser\n  } = useState(\"\");\n  useEffect(() => {\n    setUser(window.location.host.split(\".\")[0].split(\":\")[0]);\n  }, []);\n  useEffect(() => {\n    api.get(\"read-menu/\" + user).then(r => {\n      setNavMenu(r.data.links);\n    }).catch(e => {\n      var _e$response;\n\n      if (((_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status) === 404) {}\n    });\n  }, [user]);\n\n  const SideList = () => __jsx(\"div\", {\n    className: classes.mobileNav,\n    role: \"presentation\",\n    onClick: toggleDrawer,\n    onKeyDown: toggleDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: clsx(classes.menu, open && classes.menuOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, __jsx(List, {\n    component: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, navMenu.map((item, index) => __jsx(ListItem, {\n    button: true,\n    component: \"a\",\n    href: `${item.url}`,\n    key: index.toString(),\n    style: {\n      animationDuration: index * 0.15 + \"s\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(ListItemText, {\n    primary: t(\"\" + item.name),\n    className: classes.menuList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  }))), __jsx(Divider, {\n    className: classes.dividerSidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }), [\"login\", \"register\"].map((item, index) => __jsx(ListItem, {\n    button: true,\n    component: \"a\",\n    href: routeLink.saas[item],\n    key: index.toString(),\n    style: {\n      animationDuration: navMenu.length * 0.15 + \"s\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(ListItemText, {\n    primary: t(\"\" + item),\n    className: classes.menuList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }\n  }))))));\n\n  return __jsx(SwipeableDrawer, {\n    open: open,\n    onClose: toggleDrawer,\n    onOpen: toggleDrawer,\n    classes: {\n      paper: classes.paperNav\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 3\n    }\n  }, __jsx(SideList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }\n  }));\n}\n\nMobileMenu.propTypes = {\n  toggleDrawer: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation([\"saas-landing\"])(MobileMenu);","map":{"version":3,"sources":["/Users/franciscosantos/go/src/Works/rmcsm/resultarmind.com.br/components/Header/MobileMenu.js"],"names":["React","useEffect","useState","PropTypes","clsx","SwipeableDrawer","Divider","List","ListItem","ListItemText","withTranslation","routeLink","useStyles","api","MobileMenu","props","classes","toggleDrawer","open","t","navMenu","setNavMenu","user","setUser","window","location","host","split","get","then","r","data","links","catch","e","response","status","SideList","mobileNav","menu","menuOpen","map","item","index","url","toString","animationDuration","name","menuList","dividerSidebar","saas","length","paper","paperNav","propTypes","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { withTranslation } from \"~/i18n\";\nimport routeLink from \"~/public/text/link\";\nimport useStyles from \"./header-style\";\nimport api from \"../../services/api\";\n\nfunction MobileMenu(props) {\n\tconst classes = useStyles();\n\tconst { toggleDrawer, open, t } = props;\n\tconst [navMenu, setNavMenu] = useState([]);\n\tconst [user, setUser] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tsetUser(window.location.host.split(\".\")[0].split(\":\")[0]);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tapi.get(\"read-menu/\" + user)\n\t\t\t.then((r) => {\n\t\t\t\tsetNavMenu(r.data.links);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tif (e.response?.status === 404) {\n\t\t\t\t}\n\t\t\t});\n\t}, [user]);\n\n\tconst SideList = () => (\n\t\t<div\n\t\t\tclassName={classes.mobileNav}\n\t\t\trole=\"presentation\"\n\t\t\tonClick={toggleDrawer}\n\t\t\tonKeyDown={toggleDrawer}\n\t\t>\n\t\t\t<div className={clsx(classes.menu, open && classes.menuOpen)}>\n\t\t\t\t<List component=\"nav\">\n\t\t\t\t\t{navMenu.map((item, index) => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\tcomponent=\"a\"\n\t\t\t\t\t\t\thref={`${item.url}`}\n\t\t\t\t\t\t\tkey={index.toString()}\n\t\t\t\t\t\t\tstyle={{ animationDuration: index * 0.15 + \"s\" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\tprimary={t(\"\" + item.name)}\n\t\t\t\t\t\t\t\tclassName={classes.menuList}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t\t<Divider className={classes.dividerSidebar} />\n\t\t\t\t\t{[\"login\", \"register\"].map((item, index) => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\tcomponent=\"a\"\n\t\t\t\t\t\t\thref={routeLink.saas[item]}\n\t\t\t\t\t\t\tkey={index.toString()}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tanimationDuration: navMenu.length * 0.15 + \"s\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\tprimary={t(\"\" + item)}\n\t\t\t\t\t\t\t\tclassName={classes.menuList}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<SwipeableDrawer\n\t\t\topen={open}\n\t\t\tonClose={toggleDrawer}\n\t\t\tonOpen={toggleDrawer}\n\t\t\tclasses={{\n\t\t\t\tpaper: classes.paperNav,\n\t\t\t}}\n\t\t>\n\t\t\t<SideList />\n\t\t</SwipeableDrawer>\n\t);\n}\n\nMobileMenu.propTypes = {\n\ttoggleDrawer: PropTypes.func.isRequired,\n\topen: PropTypes.bool.isRequired,\n\tt: PropTypes.func.isRequired,\n};\n\nexport default withTranslation([\"saas-landing\"])(MobileMenu);\n"]},"metadata":{},"sourceType":"module"}