{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { Parallax, ParallaxProvider } from \"react-scroll-parallax\";\nimport Container from \"@material-ui/core/Container\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport ReactWOW from \"react-wow\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { withTranslation } from \"../../i18n\";\nimport { useTextAlign, useText } from \"../../theme/common\";\nimport imgAPI from \"../../public/images/imgAPI\";\nimport ParallaxMedium from \"../Parallax/Medium\";\nimport ParallaxLarge from \"../Parallax/Large\";\nimport Title from \"../Title\";\nimport useStyles from \"./feature-style\";\nimport api from \"../../services/api\";\n\nfunction Feature(props) {\n  var _section$image_path, _section$button_link, _section$button_link2;\n\n  const classes = useStyles();\n  const text = useText();\n  const align = useTextAlign();\n  const theme = useTheme();\n  const {\n    0: value,\n    1: setValue\n  } = useState(0);\n  const {\n    t\n  } = props;\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const {\n    0: section,\n    1: setSection\n  } = useState({});\n  const {\n    0: mSection,\n    1: setMSection\n  } = useState({});\n  const {\n    0: mSectionItem,\n    1: setMSectionItem\n  } = useState([]);\n  const {\n    0: user,\n    1: setUser\n  } = useState(\"\");\n  useEffect(() => {\n    setUser(window.location.host.split(\".\")[0].split(\":\")[0]);\n  }, []);\n  useEffect(() => {\n    api.get(\"read-section/\" + user).then(r => {\n      setSection(r.data);\n    }).catch(e => {\n      var _e$response;\n\n      if (((_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status) === 404) {}\n    });\n  }, [user]);\n  useEffect(() => {\n    api.get(\"read-multi-sections/\" + user).then(r => {\n      setMSection(r.data);\n    }).catch(e => {\n      var _e$response2;\n\n      if (((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.status) === 404) {}\n    });\n  }, [user]);\n  useEffect(() => {\n    api.get(\"read-multi-sections-item/\" + user).then(r => {\n      setMSectionItem(r.data);\n    }).catch(e => {\n      var _e$response3;\n\n      if (((_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : _e$response3.status) === 404) {}\n    });\n  }, [user]);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", {\n    className: classes.decoration\n  }, __jsx(\"svg\", {\n    className: classes.wave\n  }, __jsx(\"use\", {\n    xlinkHref: \"/images/saas/deco-bg.svg#main\"\n  }))), __jsx(Container, {\n    fixed: isDesktop\n  }, __jsx(ParallaxProvider, null, __jsx(\"div\", {\n    className: classes.item\n  }, __jsx(Grid, {\n    container: true,\n    direction: isMobile ? \"column-reverse\" : \"row\"\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12\n  }, __jsx(\"div\", {\n    className: classes.illustrationLeft\n  }, __jsx(Parallax, {\n    y: isMobile ? [10, 10] : [10, -25],\n    tagOuter: \"section\"\n  }, __jsx(\"figure\", {\n    className: clsx(classes.figure, classes.screen)\n  }, __jsx(\"img\", {\n    src: `${api.defaults.baseURL}${(_section$image_path = section.image_path) === null || _section$image_path === void 0 ? void 0 : _section$image_path.substring(1)}`\n    /* imgAPI.saas[0] */\n    ,\n    alt: \"screen\"\n  }))), __jsx(ParallaxMedium, null))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12\n  }, __jsx(ReactWOW, {\n    animation: \"fadeInLeftShort\",\n    offset: -100,\n    delay: \"0.2s\",\n    duration: \"0.4s\"\n  }, __jsx(\"div\", null, __jsx(Title, {\n    align: isMobile ? \"center\" : \"left\"\n  }, t(\"\" + section.title)), __jsx(Typography, {\n    display: \"block\",\n    component: \"h6\",\n    className: text.subtitle2,\n    align: isMobile ? \"center\" : \"left\"\n  }, t(\"\" + section.content)), __jsx(\"a\", {\n    href: (_section$button_link = section.button_link) === null || _section$button_link === void 0 ? void 0 : _section$button_link.url,\n    style: {\n      textDecoration: \"none\"\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    className: classes.btn\n  }, t(\"\" + ((_section$button_link2 = section.button_link) === null || _section$button_link2 === void 0 ? void 0 : _section$button_link2.name))))))))), __jsx(\"div\", {\n    className: classes.item\n  }, __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12\n  }, __jsx(ReactWOW, {\n    animation: \"fadeInRightShort\",\n    offset: -100,\n    delay: \"0.2s\",\n    duration: \"0.4s\"\n  }, __jsx(\"div\", null, __jsx(Title, {\n    align: isMobile ? \"center\" : \"right\"\n  }, t(\"common:saas-landing.feature_title1\"), \"\\xA0\", __jsx(\"strong\", null, t(\"common:saas-landing.feature_titlestrong2\"))), __jsx(Typography, {\n    display: \"block\",\n    component: \"h6\",\n    className: text.subtitle2,\n    align: isMobile ? \"center\" : \"right\"\n  }, t(\"common:saas-landing.feature_desc2\")), __jsx(\"div\", {\n    className: isMobile ? align.textCenter : align.textRight\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    className: classes.btn\n  }, t(\"common:saas-landing.see_detail\")))))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12\n  }, __jsx(\"div\", {\n    className: classes.illustrationRight\n  }, __jsx(Parallax, {\n    y: isMobile ? [10, 10] : [10, -25],\n    tagOuter: \"section\"\n  }, __jsx(\"figure\", {\n    className: clsx(classes.figure, classes.screen)\n  }, __jsx(\"img\", {\n    src: imgAPI.saas[2],\n    alt: \"screen\"\n  }))), __jsx(Hidden, {\n    smDown: true\n  }, __jsx(Parallax, {\n    y: isMobile ? [-25, -25] : [-25, 25],\n    tagOuter: \"section\"\n  }, __jsx(\"figure\", {\n    className: classes.graphic\n  }, __jsx(\"img\", {\n    src: imgAPI.saas[3],\n    alt: \"illustration\"\n  })))), __jsx(ParallaxMedium, null))))), __jsx(\"div\", {\n    className: clsx(classes.item, classes.last)\n  }, __jsx(Title, {\n    align: \"center\"\n  }, t(\"\" + mSection.title)), __jsx(\"div\", {\n    className: classes.tab\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 6\n  }, !isMobile && __jsx(Grid, {\n    item: true,\n    md: 1,\n    xs: 12\n  }), __jsx(Grid, {\n    item: true,\n    md: 10,\n    xs: 12\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    centered: true\n  }, mSectionItem.map((i, index) => __jsx(Tab, {\n    classes: {\n      root: classes.tabLabel,\n      selected: classes.selected\n    },\n    key: index,\n    label: i.tab.name\n  }))), __jsx(\"div\", {\n    className: classes.tabContent\n  }, mSectionItem.map((i, index) => __jsx(\"div\", {\n    key: index,\n    style: {\n      display: index === value ? \"block\" : \"none\"\n    }\n  }, __jsx(\"section\", null, __jsx(Typography, {\n    component: \"h6\",\n    display: \"block\",\n    align: \"center\",\n    className: text.subtitle2\n  }, t(\"\" + i.content)), __jsx(\"div\", {\n    className: classes.illustrationCenter\n  }, __jsx(\"figure\", {\n    className: clsx(classes.figure, classes.screen)\n  }, __jsx(\"img\", {\n    src: `${api.defaults.baseURL}${i.image_path.substring(1)}`,\n    alt: \"screen\"\n  })))))), __jsx(ParallaxLarge, null)))))))));\n}\n\nexport default withTranslation([\"saas-landing\"])(Feature);","map":null,"metadata":{},"sourceType":"module"}